Nesse desafio você colocará em prática o que aprendemos em relação a utilização do nginx como proxy reverso. A idéia principal é que quando um usuário acesse o nginx, o mesmo fará uma chamada em nossa aplicação node.js. Essa aplicação por sua vez adicionará um registro em nosso banco de dados mysql, cadastrando um nome na tabela people.

O retorno da aplicação node.js para o nginx deverá ser:

<h1>Full Cycle Rocks!</h1>

- Lista de nomes cadastrada no banco de dados.

Gere o docker-compose de uma forma que basta apenas rodarmos: docker-compose up -d que tudo deverá estar funcionando e disponível na porta: 8080.

Suba tudo em um repositório e faça a entrega.

* A linguagem de programação para este desafio é Node/JavaScript.

-----------

Nginx como proxy reverso

criando a rede
docker network create laranet

Listando as redes
docker network list

BUILD
NGINX
docker build -t valdyrtorres/nginx:prod . -f Dockerfile.prod
LARAVEL
cd ..
docker build -t valdyrtorres/laravel:prod laravel -f laravel/Dockerfile.prod

Rodando
docker run -d --network laranet --name laravel valdyrtorres/laravel:prod
docker run -d --network laranet --name nginx -p 8080:80 valdyrtorres/nginx:prod

docker logs nginx
---------------

Comandos:
Apagar todos os containers:
docker rm $(docker ps -a -q) -f

Subir todos os containers
docker-compose up

Subir todos os containers sem prender a tela:
docker-compose up -d

derrubar todos os containers:
docker-compose down

Subir todos os containers sem prender a tela e rebuildando as imagens:
docker-compose up -d --build

criar tabela:
use nodedb
create table people(id int not null auto_increment, name varchar(255), primary key(id));


---------------------------------
Usando o node
Vá para o diretório que você quer apontar como volume
docker run --rm -it -v $(pwd)/:/usr/src/app -p 3000:3000 node:15 bash

cd /usr/src/app
touch oi
rm oi
Criando app mínimo node
npm init 
npm install express --save

Depois de criar o dockerfile:
docker build -t valdyrtorres/hello-express .

docker run -p 3000:3000 valdyrtorres/hello-express:latest

Se fizer com o Dockerfile.prod e fora da pasta node:
docker build -t valdyrtorres/hello-express node/ -f node/Dockerfile.prod

Comandos:
docker exec -it app bash

Acesse o MySQL
docker exec -it db bash

Após a instalação do dockerize:
dockerize -wait tcp://db:3306











